// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// RangeReader is a Reader for the Range structure.
type RangeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RangeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewRangeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 429:
		result := NewRangeTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewRangeOK creates a RangeOK with default headers values
func NewRangeOK() *RangeOK {
	return &RangeOK{}
}

/*RangeOK handles this case with default header values.

OK
*/
type RangeOK struct {
	Payload string
}

func (o *RangeOK) Error() string {
	return fmt.Sprintf("[GET /range/{prefix}][%d] rangeOK  %+v", 200, o.Payload)
}

func (o *RangeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRangeTooManyRequests creates a RangeTooManyRequests with default headers values
func NewRangeTooManyRequests() *RangeTooManyRequests {
	return &RangeTooManyRequests{}
}

/*RangeTooManyRequests handles this case with default header values.

Rate Limit
*/
type RangeTooManyRequests struct {
}

func (o *RangeTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /range/{prefix}][%d] rangeTooManyRequests ", 429)
}

func (o *RangeTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
